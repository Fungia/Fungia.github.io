{"version":3,"sources":["components/img/fotka.jpg","logo.svg","components/navigator.js","components/Pages/home.js","components/Pages/AboutMe.js","components/Pages/Skills.js","components/Pages/Education.js","components/Pages/Experience.js","components/Content.js","components/layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigator","className","src","fotka","alt","onClick","props","onNavClick","Component","Home","AboutMe","Skills","Education","Experience","Content","name","getComponent","this","selected","Layout","state","choosed","setState","changeView","bind","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,mC,uECA3CD,EAAOC,QAAU,IAA0B,kC,wTCG9BC,EAAb,uKACa,IAAD,OACJ,OACI,yBAAKC,UAAU,gBACX,6BAASA,UAAU,QACf,6BAAK,yBAAKA,UAAU,OAAOC,IAAKC,IAAOC,IAAI,QAC3C,6BAAK,iDAET,6BAASH,UAAU,eACf,yBAAKI,QAAS,kBAAI,EAAKC,MAAMC,WAAW,UAAxC,kBACA,yBAAMF,QAAS,kBAAI,EAAKC,MAAMC,WAAW,aAAzC,UACA,yBAAKF,QAAS,kBAAI,EAAKC,MAAMC,WAAW,YAAxC,0BACA,yBAAKF,QAAS,kBAAI,EAAKC,MAAMC,WAAW,eAAxC,YACA,yBAAKF,QAAS,kBAAI,EAAKC,MAAMC,WAAW,gBAAxC,sBACA,yCAEJ,4BAAQN,UAAU,UAAlB,uBAhBhB,GAA+BO,aCAlBC,G,YAAb,uKAEQ,OACI,iCACI,mDAJhB,GAA0BD,cCAbE,G,MAAb,uKAEQ,OACI,iCACI,4CAJhB,GAA6BF,cCAhBG,G,MAAb,uKAEQ,OACI,iCACI,6CAJhB,GAA4BH,cCAfI,G,MAAb,uKAEQ,OACI,iCACI,yCAJhB,GAA+BJ,cCAlBK,G,MAAb,uKAEQ,OACI,iCACI,mDAJhB,GAAgCL,cCsBzB,IAAMM,EAAb,uKAEQ,OAnBR,SAAsBC,GAClB,OAAOA,GACH,IAAK,OACD,OAAO,kBAAC,EAAD,MACX,IAAK,UACD,OAAO,kBAAC,EAAD,MACX,IAAK,SACD,OAAO,kBAAC,EAAD,MACX,IAAK,YACD,OAAO,kBAAC,EAAD,MACX,IAAK,aACD,OAAO,kBAAC,EAAD,OASPC,CAAaC,KAAKX,MAAMY,cAHpC,GAA6BV,aCnBhBW,EAAb,kDAEI,aAAc,IAAD,8BACT,gBACKC,MAAQ,CAACC,QAAQ,QAFb,EAFjB,uDAOeN,GAEPE,KAAKK,SAAS,CAACD,QAAQN,MAT/B,+BAaQ,OACI,yBAAKd,UAAU,cACN,4BAAQA,UAAU,mBACd,kBAAC,EAAD,CAAWM,WAAYU,KAAKM,WAAWC,KAAKP,SAEhD,0BAAMhB,UAAU,iBACb,kBAAC,EAAD,CAASiB,SAAUD,KAAKG,MAAMC,gBAnBtD,GAA4Bb,aCObiB,MANf,WACE,OACE,kBAAC,EAAD,OCGgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.39928358.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fotka.9e9088e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport './navigator.css'\r\nimport fotka from './img/fotka.jpg'\r\nexport class Navigator extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navigatorNav\">\r\n                <section className=\"user\">\r\n                    <div><img className=\"foto\" src={fotka} alt=\":)\"/></div>\r\n                    <div><p>Justyna Klimczak</p></div>\r\n                </section>\r\n                <section className=\"information\">\r\n                    <div onClick={()=>this.props.onNavClick(\"home\")}>GŁÓWNA</div>\r\n                    <div  onClick={()=>this.props.onNavClick(\"aboutMe\")}>O MNIE</div>\r\n                    <div onClick={()=>this.props.onNavClick(\"skills\")}>UMIEJĘTNOŚCI</div>\r\n                    <div onClick={()=>this.props.onNavClick(\"education\")}>EDUKACJA</div>\r\n                    <div onClick={()=>this.props.onNavClick(\"experience\")}>DOŚWIADCZENIE</div>\r\n                    <div>KONTAKT</div>\r\n                </section>\r\n                <footer className=\"footer\">Copyright 2020</footer>    \r\n            </nav>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './home.css'\r\n\r\nexport class Home extends Component{\r\n    render(){\r\n        return(\r\n            <article >\r\n                <div>\r\n                    Strona glowna\r\n                    </div>\r\n            </article>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './AboutMe.css'\r\n\r\nexport class AboutMe extends Component{\r\n    render(){\r\n        return(\r\n            <article>\r\n                <div>\r\n                    o mnie\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Skills.css'\r\n\r\nexport class Skills extends Component{\r\n    render(){\r\n        return(\r\n            <article>\r\n                <div>\r\n                    umiejki\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Education.css'\r\n\r\nexport class Education extends Component{\r\n    render(){\r\n        return(\r\n            <article >\r\n                <div>\r\n                    edu\r\n                    </div>\r\n            </article>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Experience.css'\r\n\r\nexport class Experience extends Component{\r\n    render(){\r\n        return(\r\n            <article >\r\n                <div>\r\n                    doswiadczenie\r\n                    </div>\r\n            </article>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './content.css'\r\nimport { Home } from './Pages/home';\r\nimport { AboutMe } from './Pages/AboutMe';\r\nimport { Skills } from './Pages/Skills';\r\nimport { Education } from './Pages/Education';\r\nimport { Experience } from './Pages/Experience';\r\n\r\nfunction getComponent(name){\r\n    switch(name){\r\n        case \"home\":\r\n            return <Home/>\r\n        case \"aboutMe\":\r\n            return <AboutMe/>\r\n        case \"skills\":\r\n            return <Skills/>\r\n        case \"education\":\r\n            return <Education/>\r\n        case \"experience\":\r\n            return <Experience/>\r\n            \r\n    }\r\n}\r\n\r\n\r\nexport class Content extends Component{\r\n    render(){\r\n        return(\r\n            getComponent(this.props.selected)\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './layout.css'\r\nimport { Navigator } from './navigator';\r\nimport { Content } from './Content';\r\n\r\n\r\nexport class Layout extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {choosed:\"home\"}\r\n    }\r\n\r\n    changeView(name){\r\n        debugger\r\n        this.setState({choosed:name})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"layoutGrid\">\r\n                     <header className=\"layoutNavigator\">\r\n                         <Navigator onNavClick={this.changeView.bind(this)}></Navigator>\r\n                     </header>\r\n                     <main className=\"layoutContent\">\r\n                        <Content selected={this.state.choosed}></Content>\r\n                     </main>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Layout } from './components/layout';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout></Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}